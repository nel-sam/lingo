// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

namespace api.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20210108022521_DataSeeding")]
    partial class DataSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("api.Models.Board", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CellId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BoardId");

                    b.HasIndex("CellId");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Board");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            Key = new Guid("126963f9-ff87-46c3-a4de-035177574f47"),
                            PlayerId = 1
                        },
                        new
                        {
                            BoardId = 2,
                            Key = new Guid("226363f9-ff87-46c3-a4de-035177574f47"),
                            PlayerId = 2
                        });
                });

            modelBuilder.Entity("api.Models.BoardCell", b =>
                {
                    b.Property<int>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CellId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BoardId", "CellId");

                    b.HasIndex("CellId");

                    b.ToTable("BoardCells");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            CellId = 1
                        },
                        new
                        {
                            BoardId = 2,
                            CellId = 1
                        });
                });

            modelBuilder.Entity("api.Models.Cell", b =>
                {
                    b.Property<int>("CellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.HasKey("CellId");

                    b.ToTable("Cells");

                    b.HasData(
                        new
                        {
                            CellId = 1,
                            ImageUrl = "https://media.nature.com/lw800/magazine-assets/d41586-020-01430-5/d41586-020-01430-5_17977552.jpg",
                            Key = new Guid("14943241-3721-4abf-8977-36290b0437ec")
                        });
                });

            modelBuilder.Entity("api.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.HasKey("GameId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Key = new Guid("5d516a2b-9722-481c-b98e-89831ae4a732")
                        });
                });

            modelBuilder.Entity("api.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId");

                    b.HasIndex("GameId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            FirstName = "Nelson",
                            GameId = 1,
                            Key = new Guid("5d516a2b-9722-481c-b98e-89831ae4a732"),
                            LastName = "Samayoa"
                        },
                        new
                        {
                            PlayerId = 2,
                            FirstName = "Bayron",
                            GameId = 1,
                            Key = new Guid("5d526a2b-9722-481c-b98e-89831ae4a732"),
                            LastName = "Pineda"
                        });
                });

            modelBuilder.Entity("api.Models.Board", b =>
                {
                    b.HasOne("api.Models.Cell", null)
                        .WithMany("Boards")
                        .HasForeignKey("CellId");

                    b.HasOne("api.Models.Player", "Player")
                        .WithOne("Board")
                        .HasForeignKey("api.Models.Board", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("api.Models.BoardCell", b =>
                {
                    b.HasOne("api.Models.Board", "Board")
                        .WithMany("BoardCells")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Cell", "Cells")
                        .WithMany("BoardCells")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("Cells");
                });

            modelBuilder.Entity("api.Models.Player", b =>
                {
                    b.HasOne("api.Models.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("api.Models.Board", b =>
                {
                    b.Navigation("BoardCells");
                });

            modelBuilder.Entity("api.Models.Cell", b =>
                {
                    b.Navigation("BoardCells");

                    b.Navigation("Boards");
                });

            modelBuilder.Entity("api.Models.Game", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("api.Models.Player", b =>
                {
                    b.Navigation("Board");
                });
#pragma warning restore 612, 618
        }
    }
}
